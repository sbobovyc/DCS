# -*- python -*-
#/******************************************************************************
# * Copyright (c) 2004, 2009 Lothar Werzinger.
# * All rights reserved. This program and the accompanying materials
# * are made available under the terms of the Eclipse Public License v1.0
# * which accompanies this distribution, and is available at
# * http://www.eclipse.org/legal/epl-v10.html
# *****************************************************************************/ 


import os.path
import sys

import SconsBuilder
import SconsBuilderConfig


# add our command line options
SconsBuilder.addCommandLineOptions()


# adjust process priority
if GetOption('nice') > 0:
  try:
    SconsBuilder.log(3, ['Adjusting process priority'])
    os.nice(GetOption('nice'))
  except:
    pass


# prepare the build environment(s)
SconsBuilder.log(2, ['', 'Preparing environments ...'])
env = SconsBuilder.prepareEnvironment()
SconsBuilder.log(2, ['Preparing environments done'])


# use a sconsign file unique for each build target and configuration combination
sconscriptfile = os.path.join(os.path.abspath(env['SCB_VARIANT_DIR']), '.sconsign')
SconsBuilder.mkdir(os.path.dirname(sconscriptfile))
SConsignFile(sconscriptfile)


# prepare the build targets
SconsBuilder.log(2, ['', 'Preparing targets ...'])
SconsBuilder.prepareTargets()
SconsBuilder.log(2, ['Preparing targets done', ''])


# print the build target and configuration combination
printbuild = SconsBuilder.tryGetEnvironment(env, 'SCB_PRINT_BUILD')
if printbuild:
  printbuild(env)


#check if we want to generate documentation
if GetOption('documentation'):
  print 'generating documentation'
  Default(env.Doxygen(GetOption('doxygenfile')))
else:
  # make '.' the default target if no command line targets were specified
  if len(COMMAND_LINE_TARGETS) == 0:
    Default('.')


#sys.exit(1)
